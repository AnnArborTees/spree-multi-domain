function initializeAnalytics() {
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','<%= analytics_js %>','aatc_ga');


  window.trackers = [<%= relevant_trackers.map { |t| "'#{t.analytics_name}'" }.join(', ').html_safe %>];
  window.trackerIds = [<%= relevant_trackers.map { |t| "'#{t.analytics_id}'" }.join(', ').html_safe %>];
  window.productObjects = {};
  window.productObject = undefined;
}

function createTrackers(forEachTracker) {
  eachTrackerIn(trackers, function(t, i) {
    var id = trackerIds[i];

    aatc_ga('create', id, 'auto', { 'name': t.name });
    t.ga('require', 'ec');
    <% if try(:current_currency) %>
    t.ga('set', '&cu', '<%= current_currency %>');
    <% end %>

    forEachTracker(t, i);
  });
}

function eachTrackerIn(trackers, proc) {
  var finishedSends = 0;

  for (var i = 0; i < trackers.length; i++) {
    proc({
      name: trackers[i],
      <% # Shortcut so you don't have to say aatc_ga(t+'.send', blah, blah) etc. %>
      <% # Instead: tracker.ga('send', bla, blah) %>
      ga: function(method) {
        arguments[0] = trackers[i]+'.'+method;
        window.aatc_ga.apply(window, arguments);
      },

      <% # This will send a ux click event, and only perform the callback once %>
      <% # despite being within a loop. %>
      sendClick: function(label, callback) {
        this.ga('send', 'event', 'UX', 'click', label, {
          hitCallback: function() {
            finishedSends += 1;
            if (finishedSends >= trackers.length)
              callback();
          }
        });
      },

      sendRefund: function() {
        this.ga('send', 'event', 'Ecommerce', 'Refund', {
          nonInteraction: 1,
        });
      }
    }, i);
  }
}
